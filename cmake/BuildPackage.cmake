# - Define a macro to build a package
# The macro builds a package from a downloaded source.
# Author: Bloody.Rabbit
#
# BUILD_PACKAGE( <pkg> )
#   Downloads and builds a package.
#
#   <pkg> - Name of the package.
#
# Each supported package needs to have an associated
# file named Build<pkg>.cmake, which:
#
#  a) must define all following variables:
#
#   PKG_FOUND - If the package needs not be built.
#
#  b) must define all following variables if PKG_FOUND
#     is FALSE (otherwise it is optional):
#
#   PKG_URL        - URL of the source package.
#   PKG_MD5        - MD5 sum of the source package.
#   PKG_CMAKELISTS - Content of a listfile of the package.
#
#  c) may define one or more of the following variables:
#
#   PKG_ARCHIVE        - Name of the archive.
#   PKG_ARCHIVE_PREFIX - Prefix within the archive.
#   PKG_EXTRACT_PREFIX - Prefix during extraction.
#

MACRO( BUILD_PACKAGE PKG )
  # Include the package build definition
  INCLUDE( "Build${PKG}" )

  # If it was not found, proceed with building it
  IF( NOT PKG_FOUND )
    # Obtain plain archive name
    IF( NOT DEFINED PKG_ARCHIVE )
      GET_FILENAME_COMPONENT( PKG_ARCHIVE "${PKG_URL}" NAME )
    ENDIF( NOT DEFINED PKG_ARCHIVE )

    # Now we have name, URL and MD5 of the source
    # archive; proceed with the download
    MESSAGE( STATUS "Downloading or verifying ${PKG_ARCHIVE}" )
    FILE(
      DOWNLOAD "${PKG_URL}" "${CMAKE_CURRENT_BINARY_DIR}/${PKG_ARCHIVE}"
      SHOW_PROGRESS EXPECTED_MD5 "${PKG_MD5}"
      )

    # If the archive is newer than the extracted
    # directory, proceed with extraction
    IF( "${CMAKE_CURRENT_BINARY_DIR}/${PKG_ARCHIVE}"
        IS_NEWER_THAN
        "${CMAKE_CURRENT_BINARY_DIR}${PKG_EXTRACT_PREFIX}${PKG_ARCHIVE_PREFIX}" )
      # Print a status message
      MESSAGE( STATUS "Extracting ${PKG_ARCHIVE}" )
      # Make sure the extract directory exists
      FILE( MAKE_DIRECTORY
        "${CMAKE_CURRENT_BINARY_DIR}${PKG_EXTRACT_PREFIX}" )
      # Use CMake to extract the source archive
      EXECUTE_PROCESS(
        COMMAND "${CMAKE_COMMAND}" -E
        tar -xf "${CMAKE_CURRENT_BINARY_DIR}/${PKG_ARCHIVE}"
        WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}${PKG_EXTRACT_PREFIX}"
        )
      # Write the CMakeLists.txt
      FILE( WRITE
        "${CMAKE_CURRENT_BINARY_DIR}${PKG_EXTRACT_PREFIX}${PKG_ARCHIVE_PREFIX}/CMakeLists.txt"
        "#\n"
        "# File generated by CMake\n"
        "# EDITS NOT PRESERVED\n"
        "#\n"
        ${PKG_CMAKELISTS}
        )
    ENDIF()

    # The archive has been extracted and the listfile
    # written, proceed with building the package
    ADD_SUBDIRECTORY(
      "${CMAKE_CURRENT_BINARY_DIR}${PKG_EXTRACT_PREFIX}${PKG_ARCHIVE_PREFIX}"
      "${CMAKE_CURRENT_BINARY_DIR}${PKG_EXTRACT_PREFIX}${PKG_ARCHIVE_PREFIX}"
      )
  ENDIF( NOT PKG_FOUND )

  # Unset the variables to avoid
  # conflicts during multiple invocation
  UNSET( PKG_FOUND )
  UNSET( PKG_URL )
  UNSET( PKG_MD5 )
  UNSET( PKG_CMAKELISTS )
  UNSET( PKG_ARCHIVE )
  UNSET( PKG_ARCHIVE_PREFIX )
  UNSET( PKG_EXTRACT_PREFIX )
ENDMACRO( BUILD_PACKAGE )

